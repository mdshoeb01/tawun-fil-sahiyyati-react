{"version":3,"sources":["config/url-config.js","actions/clinic/main.js","reducers/main.js","reducers/clinics.js","reducers/available.js","actions/available/main.js","components/other/header.js","components/other/home.js","components/clinic/list-clinic.js","components/other/form-pop-up.js","components/clinic/add-clinic.js","actions/daily-update/main.js","components/daily-update/add-daily-update.js","components/daily-update/table.js","components/daily-update/list-daily-update.js","actions/expense/main.js","components/expense/add-expense.js","components/expense/list-table.js","components/expense/list-expense.js","components/other/footer.js","components/App.js","serviceWorker.js","index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","url","getClinics","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","res","data","wrap","_context","prev","next","fetch","concat","method","mode","sent","json","type","payload","stop","_x","apply","this","arguments","addClinic","_ref2","_callee2","_context2","headers","Content-Type","body","JSON","stringify","_x2","combineReducers","clinics","state","length","undefined","action","assign","available","Header","react_default","createElement","className","react_router_dom","to","data-toggle","aria-haspopup","aria-expanded","Component","Main","props","getAvailable","Intl","NumberFormat","maximumSignificantDigits","format","connect","ListClinic","map","entry","index","key","name","address","PopUp","text","AddClinic","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","preventDefault","setState","defineProperty","target","value","submitForm","success","setTimeout","redirect","t0","failure","onSubmit","react_router","onChange","form_pop_up_PopUp","addDailyUpdate","listDailyUpdate","year","month","clinicId","mehtod","abrupt","AddDailyUpdate","handleSubmit","now","Date","dMonth","getMonth","dYear","getFullYear","dDate","getDate","date","totalPatients","amountCollected","default","id","placeholder","Table","list","clinicName","ListDailyUpdate","min","max","react_csv","filename","substring","table","require","addExpense","listExpense","AddExpense","description","amount","ListExpense","list_table","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunkMiddleware","App","es","header","exact","path","render","home","component","footer","Boolean","location","hostname","match","ReactDOM","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1047164d.chunk.js","sourcesContent":["export const url = 'http://localhost:4020'\n","import { url } from '../../config/url-config'\n\nexport const GETCLINICS = 'GETCLINICS'\n\nexport const getClinics = () => {\n    return async (dispatch) => {\n        const res = await fetch(`${url}/clinic/list`, {\n            method: 'GET',\n            mode: 'cors',\n        })\n        const data = await res.json();\n        dispatch({\n            type: GETCLINICS,\n            payload: data,\n        })\n    }\n}\n\nexport const addClinic = async (data) => {\n    await fetch(`${url}/clinic/add`, {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data)\n    }, data);\n}","import { combineReducers } from 'redux'\nimport { clinics } from './clinics'\nimport { available } from './available'\n\nexport default combineReducers({\n  clinics,\n  available,\n})\n","import {\n  GETCLINICS,\n} from '../actions/clinic/main'\n\nexport const clinics = ((state = [], action) => {\n  switch (action.type) {\n    case GETCLINICS: //change here\n      return Object.assign([], state, action.payload)\n    default: return state\n  }\n})\n","import { GETAVAILABLE } from '../actions/available/main'\n\nexport const available = (state = [], action) => {\n    switch(action.type) {\n        case GETAVAILABLE:\n            return Object.assign([], state, action.payload);\n        default: return state;\n    }\n}","import { url } from '../../config/url-config'\n\nexport const GETAVAILABLE = 'GETAVAILABLE'\n\nexport const getAvailable = () => {\n    return async (dispatch) => {\n        const res = await fetch(`${url}/available`, {\n            method: 'GET',\n            mode: 'cors',\n        })\n        const data = await res.json();\n        dispatch({\n            type: GETAVAILABLE,\n            payload: data,\n        })\n    }\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\n\nclass Header extends Component {\n  render() {\n    return (\n      <header className = 'mt-5 '>\n        <ul className = 'nav justify-content-center'>\n          <Link className = 'nav-item btn align-self-start' to = '/'>Tawun Fil Sahiyyati</Link>\n          <li className = 'nav-item dropdown'>\n            <button className = 'nav-link btn dropdown-toggle' data-toggle = 'dropdown' aria-haspopup = 'true' aria-expanded = 'false'>Clinics</button>\n            <div className = 'dropdown-menu'>\n              <Link className = 'nav-item btn' to = '/add-clinic'>Add clinic</Link>\n              <Link className = 'nav-item btn' to = '/list-clinic'>List clinic</Link>\n            </div>\n          </li>\n          <li className = 'nav-item dropdown'>\n            <button className = 'nav-link btn dropdown-toggle' data-toggle = 'dropdown' aria-haspopup = 'true' aria-expanded = 'false'>Daily Updates</button>\n            <div className = 'dropdown-menu'>\n              <Link className = 'nav-item btn' to = '/add-daily-update'>Add Daily Update</Link>\n              <Link className = 'nav-item btn' to = '/list-daily-update'>List Daily Update</Link>              \n            </div>\n          </li>\n          <li className = 'nav-item dropdown'>\n            <button className = 'nav-link btn dropdown-toggle' data-toggle = 'dropdown' aria-haspopup = 'true' aria-expanded = 'false'>Expenses</button>\n            <div className = 'dropdown-menu'>\n              <Link className = 'nav-item btn' to = '/add-expense'>Add Expenses</Link>\n              <Link className = 'nav-item btn' to = '/list-expense'>List Expenses</Link>\n            </div>\n          \n          </li>\n          \n        </ul>\n      </header>\n    )\n  }\n}\nexport default Header\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { getAvailable } from '../../actions/available/main'\n\nclass Main extends Component {\n  componentDidMount () {\n    this.props.getAvailable();\n  }\n  render() {\n    return (\n      <div>\n        { this.props.available.length !== 0 ? <div className = 'mb-4 text-monospace'>Available Balance : { new Intl.NumberFormat('en-IN', { maximumSignificantDigits: 3 }).format(this.props.available[0].available) }</div> : null }\n        <div className = 'text-monospace'>Welcome to the Health-Care Management Application</div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    available: state.available,\n  }\n}\n\nexport default connect(mapStateToProps, { getAvailable }) (Main)","import React, { Component } from 'react'\nimport { getClinics } from '../../actions/clinic/main'\nimport { connect } from 'react-redux';\n\nclass ListClinic extends Component {\n    componentDidMount () {\n        this.props.getClinics();\n    }\n    render () {\n        return (\n            <div>\n                {this.props.clinics.length !== 0 ? this.props.clinics.map((entry, index) => {\n                    return (\n                        <div className = 'card' key = {index}>\n                            <div className = 'card-header'>Clinic Name: {entry.name}</div>\n                            <div className = 'card-body'>\n                                <p className = 'card-title'>Address: {entry.address}</p>\n                            </div>    \n                        </div>\n                    )\n                }) : <div className = 'text-monospace'>No Clinics Available</div> }\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps (state) {\n    return {\n        clinics: state.clinics,\n    }\n}\n\nexport default connect (mapStateToProps, { getClinics })(ListClinic)","import React from 'react'\n\nexport const PopUp = (props) => {\n    return <p>{props.text}</p>\n}","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { addClinic, getClinics } from '../../actions/clinic/main'\nimport { connect } from 'react-redux';\nimport { PopUp } from '../other/form-pop-up'\n\nclass AddClinic extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            name: '',\n            address: '',\n            success: false,\n            redirect: false,\n            failure: false,\n        }\n    }\n    handleChange = (e) => {\n        e.preventDefault();\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    submitForm = async (e) => {\n        e.preventDefault();\n        try {\n            await addClinic(this.state);\n            await this.props.getClinics();\n            this.setState({\n                success: true,\n            })\n            setTimeout(() => this.setState({\n                success: false,\n                redirect: true,\n            }), 2000);\n        } catch (err) {\n            this.setState({\n                failure: true,\n            })\n            setTimeout(() => this.setState({\n                failure: false,\n            }), 2000)\n            throw err;\n        }\n    }\n    render () {\n        return (\n            <form onSubmit = {this.submitForm}>\n                { this.state.redirect ? <Redirect to = '/list-clinic'/> : null }\n                <div className = 'form-group'>\n                    <label>Clinic Name</label>\n                    <input type = 'text' onChange = {this.handleChange} name = 'name' className = 'form-control'></input>\n                </div>\n                <div className = 'form-group'>\n                    <label>Clinic Adress</label>\n                    <input type = 'text' name = 'address' onChange = {this.handleChange} className = 'form-control'></input>\n                </div>\n                { this.state.success ? <PopUp text = 'Entry successfull, Wait while you will be redirected' /> : null }\n                { this.state.failure ? <PopUp text = 'Something went wrong' /> : null }\n\n                <button type = 'submit' className = 'btn btn-primary'>Submit</button>\n            </form>\n        )\n    }\n}\n\nfunction mapStateToProps (state) {\n    return {\n        clinics: state.clinics,\n    }\n}\n\nexport default connect(mapStateToProps, { getClinics})(AddClinic)","import { url } from '../../config/url-config'\n\nexport const addDailyUpdate = async (data) => {\n    await fetch(`${url}/daily/add-update`, {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    })\n}\n\nexport const listDailyUpdate = async (data) => {\n    const res = await fetch(`${url}/daily/list-update/${data.year}/${data.month}/${data.clinicId}`, {\n        mehtod: 'GET',\n        mode: 'cors',\n    })\n    const json = await res.json();\n    return json;\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { getClinics } from '../../actions/clinic/main'\nimport { addDailyUpdate } from '../../actions/daily-update/main'\nimport { PopUp } from '../other/form-pop-up'\n\nclass AddDailyUpdate extends Component {\n    constructor (props) {\n        super(props);\n        const now = new Date();\n        const dMonth = now.getMonth() + 1 > 9 ? now.getMonth() + 1 : `0${now.getMonth() + 1}`\n        const dYear = now.getFullYear();\n        const dDate = now.getDate() > 9 ? now.getDate() : `0${now.getDate()}`;\n        this.state = {\n            date: `${dYear}-${dMonth}-${dDate}`,\n            clinicId: '',\n            totalPatients: '',\n            amountCollected: '',\n            redirect: false,\n            success: false,\n            failure: false,\n        }\n    }\n    componentDidMount () {\n        this.props.getClinics();\n    }\n    handleChange = (e) => {\n        e.preventDefault();\n        this.setState({\n            [e.target.name]: e.target.value,\n        })\n    }\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            await addDailyUpdate(this.state)\n            this.setState({\n                success: true,\n            })\n            setTimeout(() => this.setState({\n                success: false,\n                redirect: true,\n            }), 2000);\n        } catch (err) {\n            this.setState({\n                failure: true,\n            })\n            setTimeout(() => this.setState({\n                failure: false,\n            }), 2000)\n            throw err;\n        }\n    }\n\n    render () {\n        return (\n            <form onSubmit = {this.handleSubmit}>\n                {this.state.redirect ? <Redirect to = '/list-daily-update'/> : null}\n                <div className = 'form-group'>\n                    <label>Date</label>\n                    <input type = 'date' className = 'form-control' name = 'date' value = {this.state.date} onChange = {this.handleChange}/>\n                </div>\n                <div className = 'form-group'>\n                    <label>Clinic</label>\n                    <select className = 'custom-select' name = 'clinicId' onChange = {this.handleChange}>\n                        <option default>select</option>\n                        { this.props.clinics.map((entry, index) => {\n                         return ( <option value = {entry.id} key = {index}>{entry.name}</option> )\n                        }) }\n                    </select>\n                </div>\n                <div className = 'form-group'>\n                    <label>Total Patients</label>\n                    <input type = 'number' placeholder = '40' className = 'form-control' name = 'totalPatients' value = {this.state.totalPatients} onChange = {this.handleChange}/>\n                </div>\n                <div className = 'form-group'>\n                    <label>Amount Collected</label>\n                    <input type = 'number' placeholder = '300' className = 'form-control' name = 'amountCollected' value = {this.state.amountCollected} onChange = {this.handleChange}/>                    \n                </div>\n                { this.state.success ? <PopUp text = 'Entry successfull, Wait while you will be redirected' /> : null }\n                { this.state.failure ? <PopUp text = 'Something went wrong' /> : null }\n                <button type = 'submit' className = 'btn btn-primary'>Submit</button>\n            </form>        \n        )\n    }\n}\n\nfunction mapStateToProps (state) {\n    return {\n        clinics: state.clinics,\n    }\n}\n\nexport default connect (mapStateToProps, { getClinics, addDailyUpdate })(AddDailyUpdate)","import React from 'react'\n\nconst Table = (props) => {\n    if (props.list.length === 0) return null;\n    else return (\n        <table className = 'table table-hover'>\n            <thead>\n                <tr>\n                    <th>Date</th>\n                    <th>Total Patients</th>\n                    <th>Amount Collected</th>\n                    <th>Clinic Name</th>\n                </tr>\n            </thead>\n            <tbody>\n                { props.list.map((entry, index) => {\n                    return (\n                        <tr key = { index }>\n                            <th>{ entry.date }</th>\n                            <th>{ entry.totalPatients }</th>\n                            <th>{ entry.amountCollected }</th>\n                            <th>{ entry.clinicName }</th>\n\n                        </tr>\n                    )\n                })}\n            </tbody>\n        </table>\n    )\n}\n\nexport default Table;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { getClinics } from '../../actions/clinic/main'\nimport { listDailyUpdate } from '../../actions/daily-update/main'\nimport Table from './table'\nimport { CSVLink } from 'react-csv'\n\nclass ListDailyUpdate extends Component {\n    constructor (props) {\n        super(props);\n        const now = new Date();\n        const dMonth = now.getMonth() + 1 > 9 ? now.getMonth() + 1 : `0${now.getMonth() + 1}`\n        this.state = {\n            year: now.getFullYear(),\n            month: dMonth,\n            list: [],\n        }\n    }\n    componentDidMount () {\n        this.props.getClinics();\n    }\n    handleChange = (e) => {\n        e.preventDefault();\n        this.setState({\n            [e.target.name]: e.target.value,\n        })\n    }\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        let list = await listDailyUpdate(this.state);\n        this.setState({\n            list,\n        })\n    }\n    render () {\n        return (\n            <div>\n                <form className = 'mb-3 form-inline' onSubmit = {this.handleSubmit}>\n                    <div className = 'form-group mr-2 mb-2'>\n                        <label className = 'mr-2'>Year</label>\n                        <input min = '1900' max = '2050' type = 'number' name = 'year' className = 'form-control' value = {this.state.year} onChange = {this.handleChange}/>\n                    </div>\n                    <div className = 'form-group mr-2 mb-2'>\n                        <label className = 'mr-2'>Month</label>\n                        <input type = 'number' min = '1' max = '12' name = 'month' className = 'form-control' value = {this.state.month} onChange = {this.handleChange}/>                        \n                    </div>\n                    <div className = 'form-group mr-2 mb-2'>\n                        <label className = 'mr-2'>Clinic</label>\n                        <select className = 'custom-select' name = 'clinicId' onChange = {this.handleChange}>\n                            <option default>select</option>\n                            {this.props.clinics.map((entry, index) => {\n                                return ( <option value = {entry.id} key = {index}>{entry.name}</option> )\n                            })}\n                        </select>\n                    </div>\n                    <button type = 'submit' className = 'btn btn-primary mr-2'>Search</button>\n                    { this.state.list.length !==0 ? <CSVLink data = {this.state.list} filename = {`${this.state.list[0].clinicName}-${this.state.list[0].date.substring(0, 7)}.csv`} className = 'btn btn-primary'>Download</CSVLink> : null }\n\n                </form>\n                <Table list = {this.state.list}/>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps (state) {\n    return {\n        clinics: state.clinics,\n    }\n}\n\nexport default connect (mapStateToProps, { getClinics })(ListDailyUpdate)","const { url } = require('../../config/url-config');\n\nexport const addExpense = async (data) => {\n    await fetch(`${url}/amount/add-expense`, {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data)\n    });\n}\n\nexport const listExpense = async (data) => {\n    const res = await fetch(`${url}/amount/list/${data.year}/${data.month}`, {\n        method: 'GET',\n        mode: 'cors',\n    });\n    const json = await res.json();\n    return json;\n}","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\n\nimport { addExpense } from '../../actions/expense/main'\nimport { PopUp } from '../other/form-pop-up'\n\nclass AddExpense extends Component {\n    constructor (props) {\n        super(props);\n        const now = new Date();\n        const dMonth = now.getMonth() + 1 > 9 ? now.getMonth() + 1 : `0${now.getMonth() + 1 }`;\n        const dDate = now.getDate() > 9 ? now.getDate() : `0${now.getDate()}`\n        this.state = {\n            date: `${now.getFullYear()}-${dMonth}-${dDate}`,\n            description: '',\n            type: 'debit',\n            amount: null,\n            redirect: false,\n            success: false,\n            failure: false,\n        }\n    }\n    handleChange = (e) => {\n        e.preventDefault();\n        this.setState({\n            [e.target.name]: e.target.value,\n        })\n    }\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            await addExpense(this.state);\n            this.setState({\n                success: true,\n            })\n            setTimeout(() => this.setState({\n                success: false,\n                redirect: true,\n            }), 2000);\n        } catch (err) {\n            this.setState({\n                failure: true,\n            })\n            setTimeout(() => this.setState({\n                failure: false,\n            }), 2000)\n            throw err;\n        }\n    }\n    render () {\n        return (\n            <form onSubmit = { this.handleSubmit }>\n                {this.state.redirect ? <Redirect to = '/list-expense'/> : null}\n                <div className = 'form-group'>\n                    <label>Date</label>\n                    <input type = 'date' className = 'form-control' name = 'date' value = { this.state.date } onChange = { this.handleChange } />\n                </div>\n                <div className = 'form-group'>\n                    <label>Description</label>\n                    <input placeholder = 'Some Description' type = 'text' className = 'form-control' name = 'description' onChange = { this.handleChange } />\n                </div>\n                <div className = 'form-group'>\n                    <label>Type</label>\n                    <select className = 'custom-select' name = 'type' onChange = { this.handleChange }>\n                        <option value = 'debit'>debit</option>\n                        <option value = 'credit'>credit</option>\n                    </select>\n                </div>\n                <div className = 'form-group'>\n                    <label>Amount</label>\n                    <input placeholder = '500' type = 'number' className = 'form-control' name = 'amount' onChange = { this.handleChange } />\n                </div>\n                { this.state.success ? <PopUp text = 'Entry successfull, Wait while you will be redirected' /> : null }\n                { this.state.failure ? <PopUp text = 'Something went wrong' /> : null }\n                <button type = 'submit' className = 'btn btn-primary'>Submit</button>\n            </form>\n        )\n    }\n}\n\nexport default AddExpense","import React from 'react'\n\nconst Table = (props) => {\n    if (props.list.length === 0) return null;\n    else return (\n        <table className = 'table table-hover'>\n            <thead>\n                <tr>\n                    <th>Date</th>\n                    <th>Description</th>\n                    <th>Amount</th>\n                    <th>Type</th>\n                    <th>Balance</th>\n                </tr>\n            </thead>\n            <tbody>\n                { props.list.map((entry, index) => {\n                    return (\n                        <tr key = { index }>\n                            <th>{ entry.date }</th>\n                            <th>{ entry.description }</th>\n                            <th>{ entry.amount }</th>\n                            <th>{ entry.type }</th>\n                            <th>{ entry.available }</th>\n\n                        </tr>\n                    )\n                })}\n            </tbody>\n        </table>\n    )\n}\n\nexport default Table;","import React, { Component } from 'react'\nimport { listExpense } from '../../actions/expense/main'\nimport Table from './list-table'\nimport { CSVLink } from 'react-csv'\n\nclass ListExpense extends Component {\n    constructor (props) {\n        super (props);\n        const now = new Date();\n        const dYear = now.getFullYear();\n        const dMonth = now.getMonth() + 1 > 9 ? now.getMonth() + 1 : `0${now.getMonth() + 1 }`;\n        this.state = {\n            year: dYear,\n            month: dMonth,\n            list: [],\n        }\n    }\n    handleChange = (e) => {\n        e.preventDefault();\n        this.setState({\n            [e.target.name]: e.target.value,\n        })\n    }\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        const list = await listExpense(this.state);\n        this.setState({\n            list,\n        })\n    }\n    render () {\n        return (\n            <div>\n                <form className = 'mb-2 form-inline' onSubmit = { this.handleSubmit }>\n                    <div className = 'form-group mr-2 '>\n                        <label className  =  ' mr-2 '>Year</label>\n                        <input min = '1900' max = '2050' type = 'number' name = 'year' className = 'form-control' onChange = { this.handleChange } value = { this.state.year } />\n                    </div>\n                    <div className = 'form-group  mr-2 '>\n                        <label className  =  ' mr-2 '>Month</label>\n                        <input type = 'number' min = '1' max = '12' name = 'month' className = 'form-control' onChange = { this.handleChange } value = { this.state.month } />\n                    </div>\n                    <button type = 'submit' className = 'btn btn-primary mr-2 '>Search</button>\n\n                    { this.state.list.length !==0 ? <CSVLink data = {this.state.list} filename = {`clinic-expense-${this.state.list[0].date.substring(0, 7)}.csv`} className = 'btn btn-primary mb-2'>Download</CSVLink> : null }\n                </form>\n                <Table list = { this.state.list } />\n            </div>\n        )\n    }\n}\n\nexport default ListExpense","import React, { Component } from 'react'\n\n\nclass Header extends Component {\n  render() {\n    return (\n      <footer>\n        <p>Copyright © Mohammed Shoeb Reserved</p>\n      </footer>\n    )\n  }\n}\nexport default Header\n","import React, { Component } from 'react'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport reducer from '../reducers/main'\n\nimport Header from './other/header'\n\nimport Home from './other/home'\nimport ListClinic from './clinic/list-clinic'\nimport AddClinic from './clinic/add-clinic'\nimport AddDailyUpdate from './daily-update/add-daily-update'\nimport ListDailyUpdate from './daily-update/list-daily-update'\nimport AddExpense from './expense/add-expense'\nimport ListExpense from './expense/list-expense'\n\nimport Footer from './other/footer'\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore (\n  reducer,\n  composeEnhancer(applyMiddleware(thunkMiddleware)),\n)\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store = {store}>\n        <div className = 'main d-flex flex-column justify-content-between align-items-center'>\n        <BrowserRouter>\n          <Header/>\n          <Switch>\n            <Route exact\n              path = '/'\n              render = {() => <Home/> }\n            />\n            <Route exact\n              path = '/add-clinic'\n              component = {AddClinic}\n            />\n            <Route exact\n              path = '/list-clinic'\n              component = {ListClinic}\n            />\n            <Route exact\n              path = '/add-daily-update'\n              component = {AddDailyUpdate}\n            />\n            <Route exact\n              path = '/list-daily-update'\n              component = {ListDailyUpdate}\n            />\n            <Route exact\n              path = '/add-expense'\n              component = {AddExpense}\n            />\n            <Route exact\n              path = '/list-expense'\n              component = {ListExpense}\n            />\n          </Switch>\n          <Footer/>\n        </BrowserRouter>\n        </div>\n      </Provider>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './public/index.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n//installed react bootstrap, now create strucute for project by importing bootstrap components.\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}